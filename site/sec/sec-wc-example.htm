<script src="/lib/openpgp.min.js"></script>
<link rel="import" href="/lib/polymer.html">

<dom-module id="f-secure-text-input" attributes="armoredOutput">

	<template>
		<link rel="stylesheet" href="/css/blocks/f-text-input.css">
		<link rel="stylesheet" href="/css/blocks/f-button-basic.css">

		<form action="http://localhost:10420/openpgp.htm" method="POST">
			<input type="hidden" value="" id="secretFormSource" name="secretFormSource">
			<input type="hidden" value="fdsjkfdlsnfdsfjmdsvlr3hu3" name="hmac">
			<div class="f-text-input f-text-input_multiline">
				<label class="f-text-input__label">Message
					<textarea id="enctext" class="f-text-input__text-field" rows="6" placeholder="This is OpenPGP encrypted using the OpenPGP.js library"></textarea>
				</label>
			</div>
				<button id="enc_button" class="f-button-basic">Encrypt</button>
				<input type="submit" class="f-button-basic">
				<button id="dec_button" class="f-button-basic">Descrypt</button>
		</form>

		<div class="f-text-input f-text-input_multiline">
			<label class="f-text-input__label">Output
				<textarea id="encout" class="f-text-input__text-field" rows="6" placeholder="This is OpenPGP encrypted using the OpenPGP.js library"></textarea>
			</label>
		</div>

	</template>

	<script>
		Polymer({
			/* this is the element's prototype */
			is: 'f-secure-text-input',
			ready: function() {
// debugger;
				window.openpgp.initWorker({ path:"/lib/openpgp.worker.js" }) // set the relative web worker path
				// window.openpgp.config.aead_protect = true // activate fast AES-GCM mode (not yet OpenPGP standard)
				var public = openpgp.key.readArmored(this.secretSource).keys
// console.log(public)
				var self = this
				this.$.enc_button.addEventListener("click", function(e) {
					e.preventDefault()
// console.log( self.$.enctext.value )
					openpgp.encrypt({
						publicKeys: public,
						data: self.$.enctext.value
					}).then(function(ciphertext) {
							encrypted = ciphertext.data; // '-----BEGIN PGP MESSAGE ... END PGP MESSAGE-----'
// console.log(encrypted)
							self.$.encout.value = encrypted
							self.$.secretFormSource.value = encrypted
					})
				})

				this.$.dec_button.addEventListener("click", function(e) {
					e.preventDefault();
					openpgp.decrypt({
						message: openpgp.message.readArmored(self.$.encout.value),
						publicKeys: public,    // for verification (optional)
						privateKey: openpgp.key.readArmored(self.superSecret).keys[0] // for decryption
					}).then(function(plaintext) {
						self.$.encout.value = plaintext.data
					})
				})
			}, superSecret: `-----BEGIN PGP PRIVATE KEY BLOCK-----
Version: GnuPG v1.4.13 (MingW32)

lQHYBFc6cyQBBADnMx1BffB8orB9Vwzdot2pmNkO1d4Y34SouFQuRXr4JBR//7T1
Idcw5Xfdm9c5gtmgY+LSewee4O6IQUDv+Sjk3+hlUC7rqgFyzclHWzGtcbTiD/G8
mx4MhQ8oaJeRkQXgsb2y/BByRGP1hGtlyEujXA4wyWK4PBERZxez5WnU8QARAQAB
AAP+Lf75CcvCoaUjPBhqrphlhYVrX3x0blnflEpxsu/vPjk9W9a1O1SDcY6haXUE
3UP3RGXC3TGNS1JAGlrzDprxA7Dqqsw15VgVoBNzCHtqXyOMCjoLZeH1DQR0ajCo
aEuqf3QTD3pjO8o9qlHLZFd54wKM80Zaakg53XOhpGuG1f0CAPDrmi5a46rwBdGu
i7rxW6FxCUS4P8bmSwYCXbKGNnS1CWHNjySD2QrFL8Ipeovp3Q11C55EYJ5/wtKU
xYavRrUCAPWrwKybM/GZcNnwLSimfKDUUnyvGFKXhheF9qql/YGk1JJizf7zmkzy
RadxQAuAjpSdopaAQIrKCFUtrAvRHs0B/jJHWmXpAymkdT/Wc6elwtBlLdSsJh0v
ryr7YfdkNJpv1z6T/KK6F7aoSoMaVG0SjvF06NA77pBPbvM9N6EFZ5ihULQJVGVz
dCBNYW5kiL4EEwECACgFAlc6cyQCGwMFCQAnjQAGCwkIBwMCBhUIAgkKCwQWAgMB
Ah4BAheAAAoJEJ9xgKTT+7BLaRwEAIJ5svV7TZIb82jWAfr/UDWJ9CGP13snl3yj
r2VAQjqeJ6BPbuMpEj4PkGjy1B9feLh5+1MAkFSVbFwSTV4ITuZ/XxqKjAwZnxqL
NO1/cIggqryWE90cuwBRw+Bk4BEEAkSmML+S/AUAl6yY/HTyX4KZ8s5w7HMpKdaw
DGk/CtSdnQHYBFc6cyQBBADJoYbvUqmyWQlPc/vo6ugppQiuHGURSIyAXXH9sQ+3
6n8yzTED/8s2jmj2WEbFP47K1NVIBgov6V/C8eCMjScoIxqmOnlh7prJ2rg75Eww
Pj2As5ciIwow+t30skJRvwAxh0qa8+oicwsY4KTjAEiFzbqLIv8/GTjGmbH65+LN
AwARAQABAAP8Dkr+rpqTAFs5NdWLqKEPFqil9JJ7UNE7C6+g4+VrYlOwQAP1ctc5
0TyHtz+RulJjlABBvQQxY60TUzvj+Y9yx4Ob2jtr2mL5CyHOPXt9sTWxIMDYCtoH
dd0XXkDMCEYnsCWrvefCPV+InC8EZf2/nkjRZQnxfIqJpQj7gse2L/0CANO2pGmT
22LorCGfztUByt0J5FqAbkk3sECx4HC1GaGmgUb1tpiFPiYjyk6He9RVOE5i14gA
aRwqmPM329MMPOcCAPPO9o3Vv6egbseEkdclU7gxf2tpRvcrnlwVqmQK4EdGrshC
T+CXO9SIoWtRDV1sQuNFSE8XwreQSDWTcbAJb4UCAOw7twqxsvSNtReHAbbrbifx
EzzIQJeXFSRxlhTqCHNk3XoXrgGoX/GKbW58ReZQpOfVrad48CbIESmt+WwaGhOe
64ilBBgBAgAPBQJXOnMkAhsMBQkAJ40AAAoJEJ9xgKTT+7BLz5wD/2ETzJNEXQUl
wigZLfeD7pK+pT7pQbfks4Uxmq42D9HJyHGqhniToB/HS5W6Qb5serJwbCQKN3CI
6g5sPxO/lTqXZNIxa3COHylF3E9hO8sAM7M0O2snPEC4plECcm2vvy40mnGbGKlk
ZjPvZOsN12a3p993yF8HhILme62kGqVf
=Lneg
-----END PGP PRIVATE KEY BLOCK-----`
			, secretSource: `-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.4.13 (MingW32)

mI0EVzpzJAEEAOczHUF98HyisH1XDN2i3amY2Q7V3hjfhKi4VC5FevgkFH//tPUh
1zDld92b1zmC2aBj4tJ7B57g7ohBQO/5KOTf6GVQLuuqAXLNyUdbMa1xtOIP8byb
HgyFDyhol5GRBeCxvbL8EHJEY/WEa2XIS6NcDjDJYrg8ERFnF7PladTxABEBAAG0
CVRlc3QgTWFuZIi+BBMBAgAoBQJXOnMkAhsDBQkAJ40ABgsJCAcDAgYVCAIJCgsE
FgIDAQIeAQIXgAAKCRCfcYCk0/uwS2kcBACCebL1e02SG/No1gH6/1A1ifQhj9d7
J5d8o69lQEI6niegT27jKRI+D5Bo8tQfX3i4eftTAJBUlWxcEk1eCE7mf18aiowM
GZ8aizTtf3CIIKq8lhPdHLsAUcPgZOARBAJEpjC/kvwFAJesmPx08l+CmfLOcOxz
KSnWsAxpPwrUnbiNBFc6cyQBBADJoYbvUqmyWQlPc/vo6ugppQiuHGURSIyAXXH9
sQ+36n8yzTED/8s2jmj2WEbFP47K1NVIBgov6V/C8eCMjScoIxqmOnlh7prJ2rg7
5EwwPj2As5ciIwow+t30skJRvwAxh0qa8+oicwsY4KTjAEiFzbqLIv8/GTjGmbH6
5+LNAwARAQABiKUEGAECAA8FAlc6cyQCGwwFCQAnjQAACgkQn3GApNP7sEvPnAP/
YRPMk0RdBSXCKBkt94Pukr6lPulBt+SzhTGarjYP0cnIcaqGeJOgH8dLlbpBvmx6
snBsJAo3cIjqDmw/E7+VOpdk0jFrcI4fKUXcT2E7ywAzszQ7ayc8QLimUQJyba+/
LjSacZsYqWRmM+9k6w3XZren33fIXweEguZ7raQapV8=
=q3KY
-----END PGP PUBLIC KEY BLOCK-----`
		})
  </script>

</dom-module>